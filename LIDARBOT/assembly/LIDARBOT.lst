   1               		.file	"LIDARBOT.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/manu/github/arduino/LIDARBOT/",100,0,2,.Ltext0
   8               		.stabs	"source/application/LIDARBOT.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=r(0,2);0;127;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"__int128:t(0,6)=@s128;r(0,6);02000000000000000000000000000000000000000000;0177777777777777
  18               		.stabs	"__int128 unsigned:t(0,7)=@s128;r(0,7);0;03777777777777777777777777777777777777777777;",128
  19               		.stabs	"long long int:t(0,8)=@s64;r(0,8);01000000000000000000000;00777777777777777777777;",128,0,0
  20               		.stabs	"long long unsigned int:t(0,9)=@s64;r(0,9);0;01777777777777777777777;",128,0,0,0
  21               		.stabs	"short int:t(0,10)=r(0,10);-32768;32767;",128,0,0,0
  22               		.stabs	"short unsigned int:t(0,11)=r(0,11);0;0177777;",128,0,0,0
  23               		.stabs	"signed char:t(0,12)=@s8;r(0,12);-128;127;",128,0,0,0
  24               		.stabs	"unsigned char:t(0,13)=@s8;r(0,13);0;255;",128,0,0,0
  25               		.stabs	"float:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"double:t(0,15)=r(0,1);4;0;",128,0,0,0
  27               		.stabs	"long double:t(0,16)=r(0,1);4;0;",128,0,0,0
  28               		.stabs	"short _Fract:t(0,17)=r(0,1);1;0;",128,0,0,0
  29               		.stabs	"_Fract:t(0,18)=r(0,1);2;0;",128,0,0,0
  30               		.stabs	"long _Fract:t(0,19)=r(0,1);4;0;",128,0,0,0
  31               		.stabs	"long long _Fract:t(0,20)=r(0,1);8;0;",128,0,0,0
  32               		.stabs	"unsigned short _Fract:t(0,21)=r(0,1);1;0;",128,0,0,0
  33               		.stabs	"unsigned _Fract:t(0,22)=r(0,1);2;0;",128,0,0,0
  34               		.stabs	"unsigned long _Fract:t(0,23)=r(0,1);4;0;",128,0,0,0
  35               		.stabs	"unsigned long long _Fract:t(0,24)=r(0,1);8;0;",128,0,0,0
  36               		.stabs	"_Sat short _Fract:t(0,25)=r(0,1);1;0;",128,0,0,0
  37               		.stabs	"_Sat _Fract:t(0,26)=r(0,1);2;0;",128,0,0,0
  38               		.stabs	"_Sat long _Fract:t(0,27)=r(0,1);4;0;",128,0,0,0
  39               		.stabs	"_Sat long long _Fract:t(0,28)=r(0,1);8;0;",128,0,0,0
  40               		.stabs	"_Sat unsigned short _Fract:t(0,29)=r(0,1);1;0;",128,0,0,0
  41               		.stabs	"_Sat unsigned _Fract:t(0,30)=r(0,1);2;0;",128,0,0,0
  42               		.stabs	"_Sat unsigned long _Fract:t(0,31)=r(0,1);4;0;",128,0,0,0
  43               		.stabs	"_Sat unsigned long long _Fract:t(0,32)=r(0,1);8;0;",128,0,0,0
  44               		.stabs	"short _Accum:t(0,33)=r(0,1);2;0;",128,0,0,0
  45               		.stabs	"_Accum:t(0,34)=r(0,1);4;0;",128,0,0,0
  46               		.stabs	"long _Accum:t(0,35)=r(0,1);8;0;",128,0,0,0
  47               		.stabs	"long long _Accum:t(0,36)=r(0,1);8;0;",128,0,0,0
  48               		.stabs	"unsigned short _Accum:t(0,37)=r(0,1);2;0;",128,0,0,0
  49               		.stabs	"unsigned _Accum:t(0,38)=r(0,1);4;0;",128,0,0,0
  50               		.stabs	"unsigned long _Accum:t(0,39)=r(0,1);8;0;",128,0,0,0
  51               		.stabs	"unsigned long long _Accum:t(0,40)=r(0,1);8;0;",128,0,0,0
  52               		.stabs	"_Sat short _Accum:t(0,41)=r(0,1);2;0;",128,0,0,0
  53               		.stabs	"_Sat _Accum:t(0,42)=r(0,1);4;0;",128,0,0,0
  54               		.stabs	"_Sat long _Accum:t(0,43)=r(0,1);8;0;",128,0,0,0
  55               		.stabs	"_Sat long long _Accum:t(0,44)=r(0,1);8;0;",128,0,0,0
  56               		.stabs	"_Sat unsigned short _Accum:t(0,45)=r(0,1);2;0;",128,0,0,0
  57               		.stabs	"_Sat unsigned _Accum:t(0,46)=r(0,1);4;0;",128,0,0,0
  58               		.stabs	"_Sat unsigned long _Accum:t(0,47)=r(0,1);8;0;",128,0,0,0
  59               		.stabs	"_Sat unsigned long long _Accum:t(0,48)=r(0,1);8;0;",128,0,0,0
  60               		.stabs	"void:t(0,49)=(0,49)",128,0,0,0
  61               		.stabs	"source/application/LIDARBOT.h",130,0,0,0
  62               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/avr/io.h",130,0,0,0
  63               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/avr/sfr_defs.h",130,0,0,0
  64               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/inttypes.h",130,0,0,0
  65               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/stdint.h",130,0,0,0
  66               		.stabs	"int8_t:t(5,1)=(0,12)",128,0,125,0
  67               		.stabs	"uint8_t:t(5,2)=(0,13)",128,0,126,0
  68               		.stabs	"int16_t:t(5,3)=(0,1)",128,0,127,0
  69               		.stabs	"uint16_t:t(5,4)=(0,4)",128,0,128,0
  70               		.stabs	"int32_t:t(5,5)=(0,3)",128,0,129,0
  71               		.stabs	"uint32_t:t(5,6)=(0,5)",128,0,130,0
  72               		.stabs	"int64_t:t(5,7)=(0,8)",128,0,132,0
  73               		.stabs	"uint64_t:t(5,8)=(0,9)",128,0,133,0
  74               		.stabs	"intptr_t:t(5,9)=(5,3)",128,0,146,0
  75               		.stabs	"uintptr_t:t(5,10)=(5,4)",128,0,151,0
  76               		.stabs	"int_least8_t:t(5,11)=(5,1)",128,0,163,0
  77               		.stabs	"uint_least8_t:t(5,12)=(5,2)",128,0,168,0
  78               		.stabs	"int_least16_t:t(5,13)=(5,3)",128,0,173,0
  79               		.stabs	"uint_least16_t:t(5,14)=(5,4)",128,0,178,0
  80               		.stabs	"int_least32_t:t(5,15)=(5,5)",128,0,183,0
  81               		.stabs	"uint_least32_t:t(5,16)=(5,6)",128,0,188,0
  82               		.stabs	"int_least64_t:t(5,17)=(5,7)",128,0,196,0
  83               		.stabs	"uint_least64_t:t(5,18)=(5,8)",128,0,203,0
  84               		.stabs	"int_fast8_t:t(5,19)=(5,1)",128,0,217,0
  85               		.stabs	"uint_fast8_t:t(5,20)=(5,2)",128,0,222,0
  86               		.stabs	"int_fast16_t:t(5,21)=(5,3)",128,0,227,0
  87               		.stabs	"uint_fast16_t:t(5,22)=(5,4)",128,0,232,0
  88               		.stabs	"int_fast32_t:t(5,23)=(5,5)",128,0,237,0
  89               		.stabs	"uint_fast32_t:t(5,24)=(5,6)",128,0,242,0
  90               		.stabs	"int_fast64_t:t(5,25)=(5,7)",128,0,250,0
  91               		.stabs	"uint_fast64_t:t(5,26)=(5,8)",128,0,257,0
  92               		.stabs	"intmax_t:t(5,27)=(5,7)",128,0,277,0
  93               		.stabs	"uintmax_t:t(5,28)=(5,8)",128,0,282,0
  94               		.stabn	162,0,0,0
  95               		.stabs	"int_farptr_t:t(4,1)=(5,5)",128,0,77,0
  96               		.stabs	"uint_farptr_t:t(4,2)=(5,6)",128,0,81,0
  97               		.stabn	162,0,0,0
  98               		.stabn	162,0,0,0
  99               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/avr/fuse.h",130,0,0,0
 100               		.stabs	"__fuse_t:t(6,1)=(6,2)=s3low:(0,13),0,8;high:(0,13),8,8;extended:(0,13),16,8;;",128,0,244,0
 101               		.stabn	162,0,0,0
 102               		.stabn	162,0,0,0
 103               		.stabs	"source/application/../os_rios/UART.h",130,0,0,0
 104               		.stabs	"source/application/../os_rios/../drivers/LIDAR_driver.h",130,0,0,0
 105               		.stabs	"LIDARMODULESTRUCT:T(8,1)=s9headbyte1:(0,13),0,8;headbyte2:(0,13),8,8;distanceLow:(0,13),16
 106               		.stabs	"LIDAR:t(8,2)=(8,1)",128,0,55,0
 107               		.stabs	"OBJECTPROXIMITYSTRUCT:T(8,3)=s3proximity:(0,4),0,16;valid:(0,13),16,8;;",128,0,0,0
 108               		.stabs	"OBJECT:t(8,4)=(8,3)",128,0,64,0
 109               		.stabn	162,0,0,0
 110               		.stabs	"bufferStatus:T(7,1)=eBUFFER_OK:0,BUFFER_EMPTY:1,BUFFER_FULL:2,;",128,0,0,0
 111               		.stabs	"Buffer:T(7,2)=s1026data:(7,3)=ar(7,4)=r(7,4);0;0177777;;0;1023;(0,13),0,8192;readindex:(0,
 112               		.stabs	"Buffer:t(7,5)=(7,2)",128,0,34,0
 113               		.stabn	162,0,0,0
 114               		.stabn	162,0,0,0
 115               		.stabs	"initbot:F(0,49)",36,0,3,initbot
 116               	.global	initbot
 117               		.type	initbot, @function
 118               	initbot:
 119               		.stabd	46,0,0
   1:source/application/LIDARBOT.c **** #include "LIDARBOT.h"
   2:source/application/LIDARBOT.c **** 
   3:source/application/LIDARBOT.c **** void initbot(){
 120               		.stabn	68,0,3,.LM0-.LFBB1
 121               	.LM0:
 122               	.LFBB1:
 123               	/* prologue: function */
 124               	/* frame size = 0 */
 125               	/* stack size = 0 */
 126               	.L__stack_usage = 0
   4:source/application/LIDARBOT.c ****   /* Initialize all robot functions */
   5:source/application/LIDARBOT.c ****   clocksetup();  // Master clock setup
 127               		.stabn	68,0,5,.LM1-.LFBB1
 128               	.LM1:
 129 0000 0E94 0000 		call clocksetup
   6:source/application/LIDARBOT.c ****   usartinit();   // Communication setup
 130               		.stabn	68,0,6,.LM2-.LFBB1
 131               	.LM2:
 132 0004 0E94 0000 		call usartinit
   7:source/application/LIDARBOT.c ****   lidarinit();   // LIDAR read setup
 133               		.stabn	68,0,7,.LM3-.LFBB1
 134               	.LM3:
 135 0008 0E94 0000 		call lidarinit
   8:source/application/LIDARBOT.c ****   motorinit();   // Propulsion setup
 136               		.stabn	68,0,8,.LM4-.LFBB1
 137               	.LM4:
 138 000c 0E94 0000 		call motorinit
   9:source/application/LIDARBOT.c ****   sei();         // Enable global interrupts
 139               		.stabn	68,0,9,.LM5-.LFBB1
 140               	.LM5:
 141               	/* #APP */
 142               	 ;  9 "source/application/LIDARBOT.c" 1
 143 0010 7894      		sei
 144               	 ;  0 "" 2
 145               	/* #NOAPP */
 146 0012 0895      		ret
 147               		.size	initbot, .-initbot
 148               	.Lscope1:
 149               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 150               		.stabd	78,0,0
 151               		.section	.text.startup,"ax",@progbits
 152               		.stabs	"main:F(0,1)",36,0,12,main
 153               	.global	main
 154               		.type	main, @function
 155               	main:
 156               		.stabd	46,0,0
  10:source/application/LIDARBOT.c **** }
  11:source/application/LIDARBOT.c **** 
  12:source/application/LIDARBOT.c **** int main(){
 157               		.stabn	68,0,12,.LM6-.LFBB2
 158               	.LM6:
 159               	.LFBB2:
 160               	/* prologue: function */
 161               	/* frame size = 0 */
 162               	/* stack size = 0 */
 163               	.L__stack_usage = 0
  13:source/application/LIDARBOT.c ****   // Initialize BOT
  14:source/application/LIDARBOT.c ****   initbot();
 164               		.stabn	68,0,14,.LM7-.LFBB2
 165               	.LM7:
 166 0000 0E94 0000 		call initbot
 167               	.LBB4:
 168               	.LBB5:
 169               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h",132,0,0,.Ltext1
 170               	.Ltext1:
   1:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    All rights reserved.
   5:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
   6:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
   9:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  12:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****      the documentation and/or other materials provided with the
  15:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****      distribution.
  16:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  17:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****      from this software without specific prior written permission.
  20:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  21:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  33:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** /* $Id$ */
  34:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  35:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  38:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #ifndef __DOXYGEN__
  39:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #  endif
  42:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  44:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #include <inttypes.h>
  45:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #include <util/delay_basic.h>
  46:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #include <math.h>
  47:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  48:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** /** \file */
  49:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     \code
  51:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     #include <util/delay.h>
  54:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     \endcode
  55:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  56:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     used.
  60:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  61:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     convenience functions where actual time values can be specified
  64:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  70:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     routines linked into the application.
  78:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  79:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  83:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** */
  84:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  85:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #endif
  89:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  90:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #ifndef F_CPU
  91:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** /** \ingroup util_delay
  94:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     \def F_CPU
  95:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     \brief CPU frequency in Hz
  96:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
  97:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 103:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****     integer value.
 107:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****  */
 108:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** # define F_CPU 1000000UL
 109:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #endif
 110:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 111:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #ifndef __OPTIMIZE__
 112:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #endif
 114:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 115:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****   __STDC_HOSTED__
 118:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #  include <math.h>
 119:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #endif
 120:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 121:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** /**
 122:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    \ingroup util_delay
 123:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 124:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 126:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 129:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 131:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    user will not be informed about decreased resolution.
 136:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 137:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    no delay i.e., 0ms.
 141:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 142:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    microseconds of delay.
 146:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 147:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    respectively.
 151:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 152:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    \note
 153:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 154:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    The implementation of _delay_ms() based on
 155:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    must be defined before including this header file. Also, the
 159:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****    not available to the compiler then.
 163:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 164:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****  */
 165:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** void
 166:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** _delay_ms(double __ms)
 167:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** {
 168:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 	double __tmp ;
 169:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h ****   __STDC_HOSTED__
 172:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 	uint32_t __ticks_dc;
 173:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 176:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 179:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 182:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 	#else
 183:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 		//round up by default
 184:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 	#endif
 186:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 
 187:/home/manu/github/arduino/LIDARBOT/libraries/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 171               		.stabn	68,0,187,.LM8-.LFBB2
 172               	.LM8:
 173 0004 2FEF      		ldi r18,lo8(1599999)
 174 0006 89E6      		ldi r24,hi8(1599999)
 175 0008 98E1      		ldi r25,hlo8(1599999)
 176 000a 2150      	1:	subi r18,1
 177 000c 8040      		sbci r24,0
 178 000e 9040      		sbci r25,0
 179 0010 01F4      		brne 1b
 180 0012 00C0      		rjmp .
 181 0014 0000      		nop
 182               	.L3:
 183               	.LBE5:
 184               	.LBE4:
 185               		.stabs	"source/application/LIDARBOT.c",132,0,0,.Ltext2
 186               	.Ltext2:
  15:source/application/LIDARBOT.c ****   _delay_ms(2000);
  16:source/application/LIDARBOT.c **** 
  17:source/application/LIDARBOT.c ****   while (1) {
  18:source/application/LIDARBOT.c ****     if ((obstacle.valid == VALID) && (obstacle.proximity < 45) && (botmoving == 1)) {
 187               		.stabn	68,0,18,.LM9-.LFBB2
 188               	.LM9:
 189 0016 9091 0000 		lds r25,obstacle+2
 190 001a 8091 0000 		lds r24,botmoving
 191 001e 9032      		cpi r25,lo8(32)
 192 0020 01F4      		brne .L4
 193               		.stabn	68,0,18,.LM10-.LFBB2
 194               	.LM10:
 195 0022 2091 0000 		lds r18,obstacle
 196 0026 3091 0000 		lds r19,obstacle+1
 197 002a 2D32      		cpi r18,45
 198 002c 3105      		cpc r19,__zero_reg__
 199 002e 00F4      		brsh .L4
 200               		.stabn	68,0,18,.LM11-.LFBB2
 201               	.LM11:
 202 0030 8130      		cpi r24,lo8(1)
 203 0032 01F4      		brne .L4
  19:source/application/LIDARBOT.c ****       stop();
 204               		.stabn	68,0,19,.LM12-.LFBB2
 205               	.LM12:
 206 0034 0E94 0000 		call stop
  20:source/application/LIDARBOT.c ****       steer(RIGHT, QUICK);
 207               		.stabn	68,0,20,.LM13-.LFBB2
 208               	.LM13:
 209 0038 60E0      		ldi r22,0
 210 003a 81E0      		ldi r24,lo8(1)
 211 003c 0E94 0000 		call steer
 212 0040 00C0      		rjmp .L3
 213               	.L4:
  21:source/application/LIDARBOT.c ****     }
  22:source/application/LIDARBOT.c ****     else if (botmoving == 0) {
 214               		.stabn	68,0,22,.LM14-.LFBB2
 215               	.LM14:
 216 0042 8111      		cpse r24,__zero_reg__
 217 0044 00C0      		rjmp .L3
  23:source/application/LIDARBOT.c ****       drive(FORWARD,SLOW);
 218               		.stabn	68,0,23,.LM15-.LFBB2
 219               	.LM15:
 220 0046 40E0      		ldi r20,0
 221 0048 50E0      		ldi r21,0
 222 004a 60EF      		ldi r22,lo8(-16)
 223 004c 71E4      		ldi r23,lo8(65)
 224 004e 82E0      		ldi r24,lo8(2)
 225 0050 0E94 0000 		call drive
 226 0054 00C0      		rjmp .L3
 227               		.size	main, .-main
 228               	.Lscope2:
 229               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 230               		.stabd	78,0,0
 231               		.comm	botmoving,1,1
 232               		.comm	buffercount,2,1
 233               		.comm	USART_is_receiving,1,1
 234               		.comm	rxBuffer,1026,1
 235               		.comm	obstacle,3,1
 236               		.comm	tfmini,9,1
 237               		.stabs	"tfmini:G(0,50)=B(8,2)",32,0,58,0
 238               		.stabs	"obstacle:G(0,51)=B(8,4)",32,0,66,0
 239               		.stabs	"rxBuffer:G(0,52)=B(7,5)",32,0,37,0
 240               		.stabs	"USART_is_receiving:G(0,53)=B(0,13)",32,0,38,0
 241               		.stabs	"buffercount:G(0,54)=B(0,4)",32,0,39,0
 242               		.stabs	"botmoving:G(0,13)",32,0,27,0
 243               		.text
 244               		.stabs	"",100,0,0,.Letext0
 245               	.Letext0:
 246               		.ident	"GCC: (GNU) 5.4.0"
 247               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 LIDARBOT.c
     /tmp/cckXvWjy.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cckXvWjy.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cckXvWjy.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cckXvWjy.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cckXvWjy.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cckXvWjy.s:118    .text:0000000000000000 initbot
     /tmp/cckXvWjy.s:155    .text.startup:0000000000000000 main
                            *COM*:0000000000000003 obstacle
                            *COM*:0000000000000001 botmoving
                            *COM*:0000000000000002 buffercount
                            *COM*:0000000000000001 USART_is_receiving
                            *COM*:0000000000000402 rxBuffer
                            *COM*:0000000000000009 tfmini

UNDEFINED SYMBOLS
clocksetup
usartinit
lidarinit
motorinit
stop
steer
drive
__do_clear_bss
