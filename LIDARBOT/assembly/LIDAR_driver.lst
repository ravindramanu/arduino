   1               		.file	"LIDAR_driver.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/manu/github/arduino/LIDARBOT/",100,0,2,.Ltext0
   8               		.stabs	"source/drivers/LIDAR_driver.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=r(0,2);0;127;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"__int128:t(0,6)=@s128;r(0,6);02000000000000000000000000000000000000000000;0177777777777777
  18               		.stabs	"__int128 unsigned:t(0,7)=@s128;r(0,7);0;03777777777777777777777777777777777777777777;",128
  19               		.stabs	"long long int:t(0,8)=@s64;r(0,8);01000000000000000000000;00777777777777777777777;",128,0,0
  20               		.stabs	"long long unsigned int:t(0,9)=@s64;r(0,9);0;01777777777777777777777;",128,0,0,0
  21               		.stabs	"short int:t(0,10)=r(0,10);-32768;32767;",128,0,0,0
  22               		.stabs	"short unsigned int:t(0,11)=r(0,11);0;0177777;",128,0,0,0
  23               		.stabs	"signed char:t(0,12)=@s8;r(0,12);-128;127;",128,0,0,0
  24               		.stabs	"unsigned char:t(0,13)=@s8;r(0,13);0;255;",128,0,0,0
  25               		.stabs	"float:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"double:t(0,15)=r(0,1);4;0;",128,0,0,0
  27               		.stabs	"long double:t(0,16)=r(0,1);4;0;",128,0,0,0
  28               		.stabs	"short _Fract:t(0,17)=r(0,1);1;0;",128,0,0,0
  29               		.stabs	"_Fract:t(0,18)=r(0,1);2;0;",128,0,0,0
  30               		.stabs	"long _Fract:t(0,19)=r(0,1);4;0;",128,0,0,0
  31               		.stabs	"long long _Fract:t(0,20)=r(0,1);8;0;",128,0,0,0
  32               		.stabs	"unsigned short _Fract:t(0,21)=r(0,1);1;0;",128,0,0,0
  33               		.stabs	"unsigned _Fract:t(0,22)=r(0,1);2;0;",128,0,0,0
  34               		.stabs	"unsigned long _Fract:t(0,23)=r(0,1);4;0;",128,0,0,0
  35               		.stabs	"unsigned long long _Fract:t(0,24)=r(0,1);8;0;",128,0,0,0
  36               		.stabs	"_Sat short _Fract:t(0,25)=r(0,1);1;0;",128,0,0,0
  37               		.stabs	"_Sat _Fract:t(0,26)=r(0,1);2;0;",128,0,0,0
  38               		.stabs	"_Sat long _Fract:t(0,27)=r(0,1);4;0;",128,0,0,0
  39               		.stabs	"_Sat long long _Fract:t(0,28)=r(0,1);8;0;",128,0,0,0
  40               		.stabs	"_Sat unsigned short _Fract:t(0,29)=r(0,1);1;0;",128,0,0,0
  41               		.stabs	"_Sat unsigned _Fract:t(0,30)=r(0,1);2;0;",128,0,0,0
  42               		.stabs	"_Sat unsigned long _Fract:t(0,31)=r(0,1);4;0;",128,0,0,0
  43               		.stabs	"_Sat unsigned long long _Fract:t(0,32)=r(0,1);8;0;",128,0,0,0
  44               		.stabs	"short _Accum:t(0,33)=r(0,1);2;0;",128,0,0,0
  45               		.stabs	"_Accum:t(0,34)=r(0,1);4;0;",128,0,0,0
  46               		.stabs	"long _Accum:t(0,35)=r(0,1);8;0;",128,0,0,0
  47               		.stabs	"long long _Accum:t(0,36)=r(0,1);8;0;",128,0,0,0
  48               		.stabs	"unsigned short _Accum:t(0,37)=r(0,1);2;0;",128,0,0,0
  49               		.stabs	"unsigned _Accum:t(0,38)=r(0,1);4;0;",128,0,0,0
  50               		.stabs	"unsigned long _Accum:t(0,39)=r(0,1);8;0;",128,0,0,0
  51               		.stabs	"unsigned long long _Accum:t(0,40)=r(0,1);8;0;",128,0,0,0
  52               		.stabs	"_Sat short _Accum:t(0,41)=r(0,1);2;0;",128,0,0,0
  53               		.stabs	"_Sat _Accum:t(0,42)=r(0,1);4;0;",128,0,0,0
  54               		.stabs	"_Sat long _Accum:t(0,43)=r(0,1);8;0;",128,0,0,0
  55               		.stabs	"_Sat long long _Accum:t(0,44)=r(0,1);8;0;",128,0,0,0
  56               		.stabs	"_Sat unsigned short _Accum:t(0,45)=r(0,1);2;0;",128,0,0,0
  57               		.stabs	"_Sat unsigned _Accum:t(0,46)=r(0,1);4;0;",128,0,0,0
  58               		.stabs	"_Sat unsigned long _Accum:t(0,47)=r(0,1);8;0;",128,0,0,0
  59               		.stabs	"_Sat unsigned long long _Accum:t(0,48)=r(0,1);8;0;",128,0,0,0
  60               		.stabs	"void:t(0,49)=(0,49)",128,0,0,0
  61               		.stabs	"source/drivers/LIDAR_driver.h",130,0,0,0
  62               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/avr/io.h",130,0,0,0
  63               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/avr/sfr_defs.h",130,0,0,0
  64               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/inttypes.h",130,0,0,0
  65               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/stdint.h",130,0,0,0
  66               		.stabs	"int8_t:t(5,1)=(0,12)",128,0,125,0
  67               		.stabs	"uint8_t:t(5,2)=(0,13)",128,0,126,0
  68               		.stabs	"int16_t:t(5,3)=(0,1)",128,0,127,0
  69               		.stabs	"uint16_t:t(5,4)=(0,4)",128,0,128,0
  70               		.stabs	"int32_t:t(5,5)=(0,3)",128,0,129,0
  71               		.stabs	"uint32_t:t(5,6)=(0,5)",128,0,130,0
  72               		.stabs	"int64_t:t(5,7)=(0,8)",128,0,132,0
  73               		.stabs	"uint64_t:t(5,8)=(0,9)",128,0,133,0
  74               		.stabs	"intptr_t:t(5,9)=(5,3)",128,0,146,0
  75               		.stabs	"uintptr_t:t(5,10)=(5,4)",128,0,151,0
  76               		.stabs	"int_least8_t:t(5,11)=(5,1)",128,0,163,0
  77               		.stabs	"uint_least8_t:t(5,12)=(5,2)",128,0,168,0
  78               		.stabs	"int_least16_t:t(5,13)=(5,3)",128,0,173,0
  79               		.stabs	"uint_least16_t:t(5,14)=(5,4)",128,0,178,0
  80               		.stabs	"int_least32_t:t(5,15)=(5,5)",128,0,183,0
  81               		.stabs	"uint_least32_t:t(5,16)=(5,6)",128,0,188,0
  82               		.stabs	"int_least64_t:t(5,17)=(5,7)",128,0,196,0
  83               		.stabs	"uint_least64_t:t(5,18)=(5,8)",128,0,203,0
  84               		.stabs	"int_fast8_t:t(5,19)=(5,1)",128,0,217,0
  85               		.stabs	"uint_fast8_t:t(5,20)=(5,2)",128,0,222,0
  86               		.stabs	"int_fast16_t:t(5,21)=(5,3)",128,0,227,0
  87               		.stabs	"uint_fast16_t:t(5,22)=(5,4)",128,0,232,0
  88               		.stabs	"int_fast32_t:t(5,23)=(5,5)",128,0,237,0
  89               		.stabs	"uint_fast32_t:t(5,24)=(5,6)",128,0,242,0
  90               		.stabs	"int_fast64_t:t(5,25)=(5,7)",128,0,250,0
  91               		.stabs	"uint_fast64_t:t(5,26)=(5,8)",128,0,257,0
  92               		.stabs	"intmax_t:t(5,27)=(5,7)",128,0,277,0
  93               		.stabs	"uintmax_t:t(5,28)=(5,8)",128,0,282,0
  94               		.stabn	162,0,0,0
  95               		.stabs	"int_farptr_t:t(4,1)=(5,5)",128,0,77,0
  96               		.stabs	"uint_farptr_t:t(4,2)=(5,6)",128,0,81,0
  97               		.stabn	162,0,0,0
  98               		.stabn	162,0,0,0
  99               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/avr/fuse.h",130,0,0,0
 100               		.stabs	"__fuse_t:t(6,1)=(6,2)=s3low:(0,13),0,8;high:(0,13),8,8;extended:(0,13),16,8;;",128,0,244,0
 101               		.stabn	162,0,0,0
 102               		.stabn	162,0,0,0
 103               		.stabs	"source/drivers/../os_rios/UART.h",130,0,0,0
 104               		.stabs	"bufferStatus:T(7,1)=eBUFFER_OK:0,BUFFER_EMPTY:1,BUFFER_FULL:2,;",128,0,0,0
 105               		.stabs	"Buffer:T(7,2)=s1026data:(7,3)=ar(7,4)=r(7,4);0;0177777;;0;1023;(0,13),0,8192;readindex:(0,
 106               		.stabs	"Buffer:t(7,5)=(7,2)",128,0,34,0
 107               		.stabn	162,0,0,0
 108               		.stabs	"LIDARMODULESTRUCT:T(1,1)=s9headbyte1:(0,13),0,8;headbyte2:(0,13),8,8;distanceLow:(0,13),16
 109               		.stabs	"LIDAR:t(1,2)=(1,1)",128,0,55,0
 110               		.stabs	"OBJECTPROXIMITYSTRUCT:T(1,3)=s3proximity:(0,4),0,16;valid:(0,13),16,8;;",128,0,0,0
 111               		.stabs	"OBJECT:t(1,4)=(1,3)",128,0,64,0
 112               		.stabn	162,0,0,0
 113               		.stabs	"lidarinit:F(0,49)",36,0,16,lidarinit
 114               	.global	lidarinit
 115               		.type	lidarinit, @function
 116               	lidarinit:
 117               		.stabd	46,0,0
   1:source/drivers/LIDAR_driver.c **** /*******************************************************************************
   2:source/drivers/LIDAR_driver.c **** *                              LIDAR_DRIVER.C                                  *
   3:source/drivers/LIDAR_driver.c **** ********************************************************************************
   4:source/drivers/LIDAR_driver.c **** * Functions for LIDAR driver.                                                  *
   5:source/drivers/LIDAR_driver.c **** *                                                                              *
   6:source/drivers/LIDAR_driver.c **** * Author: Ravindra, Manu Srivatsa                                              *
   7:source/drivers/LIDAR_driver.c **** * Date  : 21 Aug 2019                                                          *
   8:source/drivers/LIDAR_driver.c **** *                                                                              *
   9:source/drivers/LIDAR_driver.c **** ********************************************************************************/
  10:source/drivers/LIDAR_driver.c **** #include "LIDAR_driver.h"
  11:source/drivers/LIDAR_driver.c **** 
  12:source/drivers/LIDAR_driver.c **** /* Calculation variables used locally by the functions below */
  13:source/drivers/LIDAR_driver.c **** unsigned char transferByte, sum, position;
  14:source/drivers/LIDAR_driver.c **** unsigned int  signalstrength, distance;
  15:source/drivers/LIDAR_driver.c **** 
  16:source/drivers/LIDAR_driver.c **** void lidarinit(void){
 118               		.stabn	68,0,16,.LM0-.LFBB1
 119               	.LM0:
 120               	.LFBB1:
 121               	/* prologue: function */
 122               	/* frame size = 0 */
 123               	/* stack size = 0 */
 124               	.L__stack_usage = 0
  17:source/drivers/LIDAR_driver.c ****   /* Setup timer 0 as trigger for lidar data reading */
  18:source/drivers/LIDAR_driver.c ****   LIDARreadtimer0setup();
 125               		.stabn	68,0,18,.LM1-.LFBB1
 126               	.LM1:
 127 0000 0E94 0000 		call LIDARreadtimer0setup
  19:source/drivers/LIDAR_driver.c ****   /* Setup the built-in LED 13 as a way to indicate bad data reads */
  20:source/drivers/LIDAR_driver.c ****   faultledsetup();
 128               		.stabn	68,0,20,.LM2-.LFBB1
 129               	.LM2:
 130 0004 0C94 0000 		jmp faultledsetup
 131               		.size	lidarinit, .-lidarinit
 132               	.Lscope1:
 133               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 134               		.stabd	78,0,0
 135               		.stabs	"parse:F(0,49)",36,0,23,parse
 136               	.global	parse
 137               		.type	parse, @function
 138               	parse:
 139               		.stabd	46,0,0
  21:source/drivers/LIDAR_driver.c **** }
  22:source/drivers/LIDAR_driver.c **** 
  23:source/drivers/LIDAR_driver.c **** void parse(void){
 140               		.stabn	68,0,23,.LM3-.LFBB2
 141               	.LM3:
 142               	.LFBB2:
 143               	/* prologue: function */
 144               	/* frame size = 0 */
 145               	/* stack size = 0 */
 146               	.L__stack_usage = 0
  24:source/drivers/LIDAR_driver.c ****   /* Let us sum the first eight bytes for checksum vericication */
  25:source/drivers/LIDAR_driver.c ****   sum = (tfmini.headbyte1    + tfmini.headbyte2   +
 147               		.stabn	68,0,25,.LM4-.LFBB2
 148               	.LM4:
 149 0008 7091 0000 		lds r23,tfmini
 150 000c 4091 0000 		lds r20,tfmini+1
  26:source/drivers/LIDAR_driver.c ****          tfmini.distanceHigh + tfmini.distanceLow +
 151               		.stabn	68,0,26,.LM5-.LFBB2
 152               	.LM5:
 153 0010 6091 0000 		lds r22,tfmini+3
 154 0014 5091 0000 		lds r21,tfmini+2
  27:source/drivers/LIDAR_driver.c ****          tfmini.strengthHigh + tfmini.strengthLow +
 155               		.stabn	68,0,27,.LM6-.LFBB2
 156               	.LM6:
 157 0018 3091 0000 		lds r19,tfmini+5
 158 001c 2091 0000 		lds r18,tfmini+4
  28:source/drivers/LIDAR_driver.c ****          tfmini.mode         + tfmini.spare);
 159               		.stabn	68,0,28,.LM7-.LFBB2
 160               	.LM7:
 161 0020 9091 0000 		lds r25,tfmini+6
 162 0024 8091 0000 		lds r24,tfmini+7
  25:source/drivers/LIDAR_driver.c ****          tfmini.distanceHigh + tfmini.distanceLow +
 163               		.stabn	68,0,25,.LM8-.LFBB2
 164               	.LM8:
 165 0028 470F      		add r20,r23
 166 002a 460F      		add r20,r22
 167 002c 450F      		add r20,r21
 168 002e 430F      		add r20,r19
 169 0030 420F      		add r20,r18
 170 0032 490F      		add r20,r25
 171 0034 480F      		add r20,r24
 172 0036 4093 0000 		sts sum,r20
  29:source/drivers/LIDAR_driver.c **** 
  30:source/drivers/LIDAR_driver.c ****   /* We also need the signal strength */
  31:source/drivers/LIDAR_driver.c ****   signalstrength = tfmini.strengthHigh + tfmini.strengthLow;
 173               		.stabn	68,0,31,.LM9-.LFBB2
 174               	.LM9:
 175 003a 8091 0000 		lds r24,tfmini+5
 176 003e 2091 0000 		lds r18,tfmini+4
 177 0042 30E0      		ldi r19,0
 178 0044 280F      		add r18,r24
 179 0046 311D      		adc r19,__zero_reg__
 180 0048 3093 0000 		sts signalstrength+1,r19
 181 004c 2093 0000 		sts signalstrength,r18
  32:source/drivers/LIDAR_driver.c **** 
  33:source/drivers/LIDAR_driver.c ****   /* tfmini datasheet says the distance is ineffective below 32 cm */
  34:source/drivers/LIDAR_driver.c ****   distance = (tfmini.distanceHigh) + (tfmini.distanceLow);
 182               		.stabn	68,0,34,.LM10-.LFBB2
 183               	.LM10:
 184 0050 5091 0000 		lds r21,tfmini+3
 185 0054 8091 0000 		lds r24,tfmini+2
 186 0058 90E0      		ldi r25,0
 187 005a 850F      		add r24,r21
 188 005c 911D      		adc r25,__zero_reg__
 189 005e 9093 0000 		sts distance+1,r25
 190 0062 8093 0000 		sts distance,r24
  35:source/drivers/LIDAR_driver.c **** 
  36:source/drivers/LIDAR_driver.c ****   /* Checksum and signal srength */
  37:source/drivers/LIDAR_driver.c ****   if((tfmini.checksum == sum)  &&
 191               		.stabn	68,0,37,.LM11-.LFBB2
 192               	.LM11:
 193 0066 5091 0000 		lds r21,tfmini+8
 194 006a 4513      		cpse r20,r21
 195 006c 00C0      		rjmp .L3
 196               		.stabn	68,0,37,.LM12-.LFBB2
 197               	.LM12:
 198 006e 2531      		cpi r18,21
 199 0070 3105      		cpc r19,__zero_reg__
 200 0072 04F0      		brlt .L3
  38:source/drivers/LIDAR_driver.c ****      (signalstrength  >   20)  &&
  39:source/drivers/LIDAR_driver.c ****      (signalstrength  < 2000)  &&
  40:source/drivers/LIDAR_driver.c ****      (tfmini.mode     = 0x02)  &&
 201               		.stabn	68,0,40,.LM13-.LFBB2
 202               	.LM13:
 203 0074 22E0      		ldi r18,lo8(2)
 204 0076 2093 0000 		sts tfmini+6,r18
 205 007a 8132      		cpi r24,33
 206 007c 9105      		cpc r25,__zero_reg__
 207 007e 04F0      		brlt .L3
  41:source/drivers/LIDAR_driver.c ****      (distance        >   32)  &&
  42:source/drivers/LIDAR_driver.c ****      (distance        < 1200)) {
  43:source/drivers/LIDAR_driver.c **** 
  44:source/drivers/LIDAR_driver.c ****     obstacle.proximity = distance;
 208               		.stabn	68,0,44,.LM14-.LFBB2
 209               	.LM14:
 210 0080 9093 0000 		sts obstacle+1,r25
 211 0084 8093 0000 		sts obstacle,r24
  45:source/drivers/LIDAR_driver.c ****     obstacle.valid = VALID;
 212               		.stabn	68,0,45,.LM15-.LFBB2
 213               	.LM15:
 214 0088 80E2      		ldi r24,lo8(32)
 215 008a 8093 0000 		sts obstacle+2,r24
  46:source/drivers/LIDAR_driver.c ****     PORTB &= ~(1<<PORTB5);
 216               		.stabn	68,0,46,.LM16-.LFBB2
 217               	.LM16:
 218 008e 2D98      		cbi 0x5,5
 219 0090 0895      		ret
 220               	.L3:
  47:source/drivers/LIDAR_driver.c ****   }
  48:source/drivers/LIDAR_driver.c ****   else {
  49:source/drivers/LIDAR_driver.c ****     obstacle.valid = INVALID;
 221               		.stabn	68,0,49,.LM17-.LFBB2
 222               	.LM17:
 223 0092 8FEF      		ldi r24,lo8(-1)
 224 0094 8093 0000 		sts obstacle+2,r24
  50:source/drivers/LIDAR_driver.c ****     PORTB |= (1<<PORTB5);
 225               		.stabn	68,0,50,.LM18-.LFBB2
 226               	.LM18:
 227 0098 2D9A      		sbi 0x5,5
 228 009a 0895      		ret
 229               		.size	parse, .-parse
 230               	.Lscope2:
 231               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 232               		.stabd	78,0,0
 233               		.stabs	"readLIDAR:F(0,49)",36,0,54,readLIDAR
 234               	.global	readLIDAR
 235               		.type	readLIDAR, @function
 236               	readLIDAR:
 237               		.stabd	46,0,0
  51:source/drivers/LIDAR_driver.c ****   }
  52:source/drivers/LIDAR_driver.c **** }
  53:source/drivers/LIDAR_driver.c **** 
  54:source/drivers/LIDAR_driver.c **** void readLIDAR(void){
 238               		.stabn	68,0,54,.LM19-.LFBB3
 239               	.LM19:
 240               	.LFBB3:
 241               	/* prologue: function */
 242               	/* frame size = 0 */
 243               	/* stack size = 0 */
 244               	.L__stack_usage = 0
  55:source/drivers/LIDAR_driver.c ****   // Read a byte and parse it
  56:source/drivers/LIDAR_driver.c ****   if (rxBufferRead(&transferByte) != BUFFER_OK) {
 245               		.stabn	68,0,56,.LM20-.LFBB3
 246               	.LM20:
 247 009c 80E0      		ldi r24,lo8(transferByte)
 248 009e 90E0      		ldi r25,hi8(transferByte)
 249 00a0 0E94 0000 		call rxBufferRead
 250 00a4 892B      		or r24,r25
 251 00a6 01F0      		breq .+2
 252 00a8 00C0      		rjmp .L6
 253               	.LBB4:
 254               	.LBB5:
  57:source/drivers/LIDAR_driver.c ****     return;
  58:source/drivers/LIDAR_driver.c ****   }
  59:source/drivers/LIDAR_driver.c **** 
  60:source/drivers/LIDAR_driver.c ****   switch(position){
 255               		.stabn	68,0,60,.LM21-.LFBB3
 256               	.LM21:
 257 00aa E091 0000 		lds r30,position
 258 00ae 8E2F      		mov r24,r30
 259 00b0 90E0      		ldi r25,0
 260 00b2 8930      		cpi r24,9
 261 00b4 9105      		cpc r25,__zero_reg__
 262 00b6 00F4      		brsh .L6
 263 00b8 FC01      		movw r30,r24
 264 00ba E050      		subi r30,lo8(-(gs(.L9)))
 265 00bc F040      		sbci r31,hi8(-(gs(.L9)))
 266 00be 8091 0000 		lds r24,transferByte
 267 00c2 0C94 0000 		jmp __tablejump2__
 268               		.section	.progmem.gcc_sw_table,"a",@progbits
 269               		.p2align	1
 270               	.L9:
 271 0000 0000      		.word gs(.L8)
 272 0002 0000      		.word gs(.L10)
 273 0004 0000      		.word gs(.L11)
 274 0006 0000      		.word gs(.L12)
 275 0008 0000      		.word gs(.L13)
 276 000a 0000      		.word gs(.L14)
 277 000c 0000      		.word gs(.L15)
 278 000e 0000      		.word gs(.L16)
 279 0010 0000      		.word gs(.L17)
 280               		.text
 281               	.L8:
  61:source/drivers/LIDAR_driver.c ****     /* Check if the first byte is HEAD */
  62:source/drivers/LIDAR_driver.c ****     case 0: {
  63:source/drivers/LIDAR_driver.c ****       if(transferByte == HEAD){
 282               		.stabn	68,0,63,.LM22-.LFBB3
 283               	.LM22:
 284 00c6 8935      		cpi r24,lo8(89)
 285 00c8 01F4      		brne .L6
  64:source/drivers/LIDAR_driver.c ****         tfmini.headbyte1=transferByte;
 286               		.stabn	68,0,64,.LM23-.LFBB3
 287               	.LM23:
 288 00ca 8093 0000 		sts tfmini,r24
  65:source/drivers/LIDAR_driver.c ****         position+=1;
 289               		.stabn	68,0,65,.LM24-.LFBB3
 290               	.LM24:
 291 00ce 81E0      		ldi r24,lo8(1)
 292 00d0 00C0      		rjmp .L19
 293               	.L10:
  66:source/drivers/LIDAR_driver.c ****       } else {
  67:source/drivers/LIDAR_driver.c ****         position=0;
  68:source/drivers/LIDAR_driver.c ****       }
  69:source/drivers/LIDAR_driver.c ****       break;
  70:source/drivers/LIDAR_driver.c ****     }
  71:source/drivers/LIDAR_driver.c **** 
  72:source/drivers/LIDAR_driver.c ****     /* Check if the second byte is also HEAD */
  73:source/drivers/LIDAR_driver.c ****     case 1: {
  74:source/drivers/LIDAR_driver.c ****       if(transferByte == HEAD){
 294               		.stabn	68,0,74,.LM25-.LFBB3
 295               	.LM25:
 296 00d2 8935      		cpi r24,lo8(89)
 297 00d4 01F4      		brne .L18
  75:source/drivers/LIDAR_driver.c ****         tfmini.headbyte2=transferByte;
 298               		.stabn	68,0,75,.LM26-.LFBB3
 299               	.LM26:
 300 00d6 8093 0000 		sts tfmini+1,r24
  76:source/drivers/LIDAR_driver.c ****         position+=1;
 301               		.stabn	68,0,76,.LM27-.LFBB3
 302               	.LM27:
 303 00da 82E0      		ldi r24,lo8(2)
 304 00dc 00C0      		rjmp .L19
 305               	.L18:
  77:source/drivers/LIDAR_driver.c ****       } else {
  78:source/drivers/LIDAR_driver.c ****         position=0;
 306               		.stabn	68,0,78,.LM28-.LFBB3
 307               	.LM28:
 308 00de 1092 0000 		sts position,__zero_reg__
 309 00e2 0895      		ret
 310               	.L11:
  79:source/drivers/LIDAR_driver.c ****       }
  80:source/drivers/LIDAR_driver.c ****       break;
  81:source/drivers/LIDAR_driver.c ****     }
  82:source/drivers/LIDAR_driver.c **** 
  83:source/drivers/LIDAR_driver.c ****     /* Gather the next 6 bytes*/
  84:source/drivers/LIDAR_driver.c ****     case 2: {
  85:source/drivers/LIDAR_driver.c ****       tfmini.distanceLow=transferByte;
 311               		.stabn	68,0,85,.LM29-.LFBB3
 312               	.LM29:
 313 00e4 8093 0000 		sts tfmini+2,r24
  86:source/drivers/LIDAR_driver.c ****       position+=1;
 314               		.stabn	68,0,86,.LM30-.LFBB3
 315               	.LM30:
 316 00e8 83E0      		ldi r24,lo8(3)
 317 00ea 00C0      		rjmp .L19
 318               	.L12:
  87:source/drivers/LIDAR_driver.c ****       break;
  88:source/drivers/LIDAR_driver.c ****     }
  89:source/drivers/LIDAR_driver.c ****     case 3: {
  90:source/drivers/LIDAR_driver.c ****       tfmini.distanceHigh=transferByte;
 319               		.stabn	68,0,90,.LM31-.LFBB3
 320               	.LM31:
 321 00ec 8093 0000 		sts tfmini+3,r24
  91:source/drivers/LIDAR_driver.c ****       position+=1;
 322               		.stabn	68,0,91,.LM32-.LFBB3
 323               	.LM32:
 324 00f0 84E0      		ldi r24,lo8(4)
 325 00f2 00C0      		rjmp .L19
 326               	.L13:
  92:source/drivers/LIDAR_driver.c ****       break;
  93:source/drivers/LIDAR_driver.c ****     }
  94:source/drivers/LIDAR_driver.c ****     case 4: {
  95:source/drivers/LIDAR_driver.c ****       tfmini.strengthLow=transferByte;
 327               		.stabn	68,0,95,.LM33-.LFBB3
 328               	.LM33:
 329 00f4 8093 0000 		sts tfmini+4,r24
  96:source/drivers/LIDAR_driver.c ****       position+=1;
 330               		.stabn	68,0,96,.LM34-.LFBB3
 331               	.LM34:
 332 00f8 85E0      		ldi r24,lo8(5)
 333 00fa 00C0      		rjmp .L19
 334               	.L14:
  97:source/drivers/LIDAR_driver.c **** 
  98:source/drivers/LIDAR_driver.c ****       break;
  99:source/drivers/LIDAR_driver.c ****     }
 100:source/drivers/LIDAR_driver.c ****     case 5: {
 101:source/drivers/LIDAR_driver.c ****       tfmini.strengthHigh=transferByte;
 335               		.stabn	68,0,101,.LM35-.LFBB3
 336               	.LM35:
 337 00fc 8093 0000 		sts tfmini+5,r24
 102:source/drivers/LIDAR_driver.c ****       position+=1;
 338               		.stabn	68,0,102,.LM36-.LFBB3
 339               	.LM36:
 340 0100 86E0      		ldi r24,lo8(6)
 341 0102 00C0      		rjmp .L19
 342               	.L15:
 103:source/drivers/LIDAR_driver.c **** 
 104:source/drivers/LIDAR_driver.c ****       break;
 105:source/drivers/LIDAR_driver.c ****     }
 106:source/drivers/LIDAR_driver.c ****     case 6: {
 107:source/drivers/LIDAR_driver.c ****       tfmini.mode=transferByte;
 343               		.stabn	68,0,107,.LM37-.LFBB3
 344               	.LM37:
 345 0104 8093 0000 		sts tfmini+6,r24
 108:source/drivers/LIDAR_driver.c ****       position+=1;
 346               		.stabn	68,0,108,.LM38-.LFBB3
 347               	.LM38:
 348 0108 87E0      		ldi r24,lo8(7)
 349 010a 00C0      		rjmp .L19
 350               	.L16:
 109:source/drivers/LIDAR_driver.c ****       break;
 110:source/drivers/LIDAR_driver.c ****     }
 111:source/drivers/LIDAR_driver.c ****     case 7: {
 112:source/drivers/LIDAR_driver.c ****       tfmini.spare=transferByte;
 351               		.stabn	68,0,112,.LM39-.LFBB3
 352               	.LM39:
 353 010c 8093 0000 		sts tfmini+7,r24
 113:source/drivers/LIDAR_driver.c ****       position+=1;
 354               		.stabn	68,0,113,.LM40-.LFBB3
 355               	.LM40:
 356 0110 88E0      		ldi r24,lo8(8)
 357               	.L19:
 358 0112 8093 0000 		sts position,r24
 359 0116 0895      		ret
 360               	.L17:
 114:source/drivers/LIDAR_driver.c **** 
 115:source/drivers/LIDAR_driver.c ****       break;
 116:source/drivers/LIDAR_driver.c ****     }
 117:source/drivers/LIDAR_driver.c **** 
 118:source/drivers/LIDAR_driver.c ****     /* Once we get the checksum we can immediately parse the distance */
 119:source/drivers/LIDAR_driver.c ****     case 8: {
 120:source/drivers/LIDAR_driver.c ****       tfmini.checksum=transferByte;
 361               		.stabn	68,0,120,.LM41-.LFBB3
 362               	.LM41:
 363 0118 8093 0000 		sts tfmini+8,r24
 121:source/drivers/LIDAR_driver.c ****       parse();
 364               		.stabn	68,0,121,.LM42-.LFBB3
 365               	.LM42:
 366 011c 0E94 0000 		call parse
 122:source/drivers/LIDAR_driver.c **** 
 123:source/drivers/LIDAR_driver.c ****       /* Reset the position to first byte and repeat */
 124:source/drivers/LIDAR_driver.c ****       position=0;
 367               		.stabn	68,0,124,.LM43-.LFBB3
 368               	.LM43:
 369 0120 1092 0000 		sts position,__zero_reg__
 125:source/drivers/LIDAR_driver.c **** 
 126:source/drivers/LIDAR_driver.c ****       /* Reset the checksum to invalidate parsed frame */
 127:source/drivers/LIDAR_driver.c ****       tfmini.checksum = 0;
 370               		.stabn	68,0,127,.LM44-.LFBB3
 371               	.LM44:
 372 0124 1092 0000 		sts tfmini+8,__zero_reg__
 373               	.L6:
 374 0128 0895      		ret
 375               	.LBE5:
 376               	.LBE4:
 377               		.size	readLIDAR, .-readLIDAR
 378               	.Lscope3:
 379               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 380               		.stabd	78,0,0
 381               		.stabs	"__vector_14:F(0,49)",36,0,139,__vector_14
 382               	.global	__vector_14
 383               		.type	__vector_14, @function
 384               	__vector_14:
 385               		.stabd	46,0,0
 128:source/drivers/LIDAR_driver.c **** 
 129:source/drivers/LIDAR_driver.c ****       break;
 130:source/drivers/LIDAR_driver.c ****     }
 131:source/drivers/LIDAR_driver.c ****   }
 132:source/drivers/LIDAR_driver.c **** }
 133:source/drivers/LIDAR_driver.c **** 
 134:source/drivers/LIDAR_driver.c **** /******************************************************************************/
 135:source/drivers/LIDAR_driver.c **** /*                          INTERRUPT SERVICE ROUTINES                        */
 136:source/drivers/LIDAR_driver.c **** /******************************************************************************/
 137:source/drivers/LIDAR_driver.c **** 
 138:source/drivers/LIDAR_driver.c **** /* TIMER 0 COMPARE MATCH ROUTINE TO READ FROM BUFFER */
 139:source/drivers/LIDAR_driver.c **** ISR(TIMER0_COMPA_vect){
 386               		.stabn	68,0,139,.LM45-.LFBB4
 387               	.LM45:
 388               	.LFBB4:
 389 012a 1F92      		push r1
 390 012c 0F92      		push r0
 391 012e 0FB6      		in r0,__SREG__
 392 0130 0F92      		push r0
 393 0132 1124      		clr __zero_reg__
 394 0134 2F93      		push r18
 395 0136 3F93      		push r19
 396 0138 4F93      		push r20
 397 013a 5F93      		push r21
 398 013c 6F93      		push r22
 399 013e 7F93      		push r23
 400 0140 8F93      		push r24
 401 0142 9F93      		push r25
 402 0144 AF93      		push r26
 403 0146 BF93      		push r27
 404 0148 EF93      		push r30
 405 014a FF93      		push r31
 406               	/* prologue: Signal */
 407               	/* frame size = 0 */
 408               	/* stack size = 15 */
 409               	.L__stack_usage = 15
 140:source/drivers/LIDAR_driver.c ****   /* We want our ISR to do nothing in the middle of a receive since this ISR
 141:source/drivers/LIDAR_driver.c ****    * interrupts our receive USART ISR because of higher prioirty. Unfortunately
 142:source/drivers/LIDAR_driver.c ****    * the Arduino does not allow NVIC or prioritizable interrupts since it is a
 143:source/drivers/LIDAR_driver.c ****    * low spec board using the ATMega328p, so we have to work with what we have.
 144:source/drivers/LIDAR_driver.c ****    * This means the use of flags and byte count can be one of the ways to tell
 145:source/drivers/LIDAR_driver.c ****    * that the USART is in the middle of a receive operation and also when the
 146:source/drivers/LIDAR_driver.c ****    * buffer is ready for a read. Here we wait until there are atleast 50 bytes
 147:source/drivers/LIDAR_driver.c ****    * or close to 5 frames in the buffer to start reading. This method helps not
 148:source/drivers/LIDAR_driver.c ****    * readin the buffer when there is no data and alos keeps the interrupt time
 149:source/drivers/LIDAR_driver.c ****    * short.
 150:source/drivers/LIDAR_driver.c ****    */
 151:source/drivers/LIDAR_driver.c ****    if ((USART_is_receiving != 1) && (buffercount>50)) {
 410               		.stabn	68,0,151,.LM46-.LFBB4
 411               	.LM46:
 412 014c 8091 0000 		lds r24,USART_is_receiving
 413 0150 8130      		cpi r24,lo8(1)
 414 0152 01F0      		breq .L20
 415               		.stabn	68,0,151,.LM47-.LFBB4
 416               	.LM47:
 417 0154 8091 0000 		lds r24,buffercount
 418 0158 9091 0000 		lds r25,buffercount+1
 419 015c C397      		sbiw r24,51
 420 015e 00F0      		brlo .L20
 152:source/drivers/LIDAR_driver.c ****      readLIDAR();
 421               		.stabn	68,0,152,.LM48-.LFBB4
 422               	.LM48:
 423 0160 0E94 0000 		call readLIDAR
 424               	.L20:
 425               	/* epilogue start */
 153:source/drivers/LIDAR_driver.c ****   }
 154:source/drivers/LIDAR_driver.c **** }
 426               		.stabn	68,0,154,.LM49-.LFBB4
 427               	.LM49:
 428 0164 FF91      		pop r31
 429 0166 EF91      		pop r30
 430 0168 BF91      		pop r27
 431 016a AF91      		pop r26
 432 016c 9F91      		pop r25
 433 016e 8F91      		pop r24
 434 0170 7F91      		pop r23
 435 0172 6F91      		pop r22
 436 0174 5F91      		pop r21
 437 0176 4F91      		pop r20
 438 0178 3F91      		pop r19
 439 017a 2F91      		pop r18
 440 017c 0F90      		pop r0
 441 017e 0FBE      		out __SREG__,r0
 442 0180 0F90      		pop r0
 443 0182 1F90      		pop r1
 444 0184 1895      		reti
 445               		.size	__vector_14, .-__vector_14
 446               	.Lscope4:
 447               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 448               		.stabd	78,0,0
 449               		.comm	distance,2,1
 450               		.comm	signalstrength,2,1
 451               		.comm	position,1,1
 452               		.comm	sum,1,1
 453               		.comm	transferByte,1,1
 454               		.comm	obstacle,3,1
 455               		.comm	tfmini,9,1
 456               		.comm	buffercount,2,1
 457               		.comm	USART_is_receiving,1,1
 458               		.comm	rxBuffer,1026,1
 459               		.stabs	"rxBuffer:G(0,50)=B(7,5)",32,0,37,0
 460               		.stabs	"USART_is_receiving:G(0,51)=B(0,13)",32,0,38,0
 461               		.stabs	"buffercount:G(0,52)=B(0,4)",32,0,39,0
 462               		.stabs	"tfmini:G(0,53)=B(1,2)",32,0,58,0
 463               		.stabs	"obstacle:G(0,54)=B(1,4)",32,0,66,0
 464               		.stabs	"transferByte:G(0,13)",32,0,13,0
 465               		.stabs	"sum:G(0,13)",32,0,13,0
 466               		.stabs	"position:G(0,13)",32,0,13,0
 467               		.stabs	"signalstrength:G(0,4)",32,0,14,0
 468               		.stabs	"distance:G(0,4)",32,0,14,0
 469               		.stabs	"",100,0,0,.Letext0
 470               	.Letext0:
 471               		.ident	"GCC: (GNU) 5.4.0"
 472               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 LIDAR_driver.c
     /tmp/ccQjabXs.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccQjabXs.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccQjabXs.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccQjabXs.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccQjabXs.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccQjabXs.s:116    .text:0000000000000000 lidarinit
     /tmp/ccQjabXs.s:138    .text:0000000000000008 parse
                            *COM*:0000000000000009 tfmini
                            *COM*:0000000000000001 sum
                            *COM*:0000000000000002 signalstrength
                            *COM*:0000000000000002 distance
                            *COM*:0000000000000003 obstacle
     /tmp/ccQjabXs.s:236    .text:000000000000009c readLIDAR
                            *COM*:0000000000000001 transferByte
                            *COM*:0000000000000001 position
     /tmp/ccQjabXs.s:384    .text:000000000000012a __vector_14
                            *COM*:0000000000000001 USART_is_receiving
                            *COM*:0000000000000002 buffercount
                            *COM*:0000000000000402 rxBuffer

UNDEFINED SYMBOLS
LIDARreadtimer0setup
faultledsetup
rxBufferRead
__tablejump2__
__do_clear_bss
