   1               		.file	"LIDAR_driver.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/manu/github/arduino/LIDARBOT/",100,0,2,.Ltext0
   8               		.stabs	"source/drivers/LIDAR_driver.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=r(0,2);0;127;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"__int128:t(0,6)=@s128;r(0,6);02000000000000000000000000000000000000000000;0177777777777777
  18               		.stabs	"__int128 unsigned:t(0,7)=@s128;r(0,7);0;03777777777777777777777777777777777777777777;",128
  19               		.stabs	"long long int:t(0,8)=@s64;r(0,8);01000000000000000000000;00777777777777777777777;",128,0,0
  20               		.stabs	"long long unsigned int:t(0,9)=@s64;r(0,9);0;01777777777777777777777;",128,0,0,0
  21               		.stabs	"short int:t(0,10)=r(0,10);-32768;32767;",128,0,0,0
  22               		.stabs	"short unsigned int:t(0,11)=r(0,11);0;0177777;",128,0,0,0
  23               		.stabs	"signed char:t(0,12)=@s8;r(0,12);-128;127;",128,0,0,0
  24               		.stabs	"unsigned char:t(0,13)=@s8;r(0,13);0;255;",128,0,0,0
  25               		.stabs	"float:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"double:t(0,15)=r(0,1);4;0;",128,0,0,0
  27               		.stabs	"long double:t(0,16)=r(0,1);4;0;",128,0,0,0
  28               		.stabs	"short _Fract:t(0,17)=r(0,1);1;0;",128,0,0,0
  29               		.stabs	"_Fract:t(0,18)=r(0,1);2;0;",128,0,0,0
  30               		.stabs	"long _Fract:t(0,19)=r(0,1);4;0;",128,0,0,0
  31               		.stabs	"long long _Fract:t(0,20)=r(0,1);8;0;",128,0,0,0
  32               		.stabs	"unsigned short _Fract:t(0,21)=r(0,1);1;0;",128,0,0,0
  33               		.stabs	"unsigned _Fract:t(0,22)=r(0,1);2;0;",128,0,0,0
  34               		.stabs	"unsigned long _Fract:t(0,23)=r(0,1);4;0;",128,0,0,0
  35               		.stabs	"unsigned long long _Fract:t(0,24)=r(0,1);8;0;",128,0,0,0
  36               		.stabs	"_Sat short _Fract:t(0,25)=r(0,1);1;0;",128,0,0,0
  37               		.stabs	"_Sat _Fract:t(0,26)=r(0,1);2;0;",128,0,0,0
  38               		.stabs	"_Sat long _Fract:t(0,27)=r(0,1);4;0;",128,0,0,0
  39               		.stabs	"_Sat long long _Fract:t(0,28)=r(0,1);8;0;",128,0,0,0
  40               		.stabs	"_Sat unsigned short _Fract:t(0,29)=r(0,1);1;0;",128,0,0,0
  41               		.stabs	"_Sat unsigned _Fract:t(0,30)=r(0,1);2;0;",128,0,0,0
  42               		.stabs	"_Sat unsigned long _Fract:t(0,31)=r(0,1);4;0;",128,0,0,0
  43               		.stabs	"_Sat unsigned long long _Fract:t(0,32)=r(0,1);8;0;",128,0,0,0
  44               		.stabs	"short _Accum:t(0,33)=r(0,1);2;0;",128,0,0,0
  45               		.stabs	"_Accum:t(0,34)=r(0,1);4;0;",128,0,0,0
  46               		.stabs	"long _Accum:t(0,35)=r(0,1);8;0;",128,0,0,0
  47               		.stabs	"long long _Accum:t(0,36)=r(0,1);8;0;",128,0,0,0
  48               		.stabs	"unsigned short _Accum:t(0,37)=r(0,1);2;0;",128,0,0,0
  49               		.stabs	"unsigned _Accum:t(0,38)=r(0,1);4;0;",128,0,0,0
  50               		.stabs	"unsigned long _Accum:t(0,39)=r(0,1);8;0;",128,0,0,0
  51               		.stabs	"unsigned long long _Accum:t(0,40)=r(0,1);8;0;",128,0,0,0
  52               		.stabs	"_Sat short _Accum:t(0,41)=r(0,1);2;0;",128,0,0,0
  53               		.stabs	"_Sat _Accum:t(0,42)=r(0,1);4;0;",128,0,0,0
  54               		.stabs	"_Sat long _Accum:t(0,43)=r(0,1);8;0;",128,0,0,0
  55               		.stabs	"_Sat long long _Accum:t(0,44)=r(0,1);8;0;",128,0,0,0
  56               		.stabs	"_Sat unsigned short _Accum:t(0,45)=r(0,1);2;0;",128,0,0,0
  57               		.stabs	"_Sat unsigned _Accum:t(0,46)=r(0,1);4;0;",128,0,0,0
  58               		.stabs	"_Sat unsigned long _Accum:t(0,47)=r(0,1);8;0;",128,0,0,0
  59               		.stabs	"_Sat unsigned long long _Accum:t(0,48)=r(0,1);8;0;",128,0,0,0
  60               		.stabs	"void:t(0,49)=(0,49)",128,0,0,0
  61               		.stabs	"source/drivers/LIDAR_driver.h",130,0,0,0
  62               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/avr/io.h",130,0,0,0
  63               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/avr/sfr_defs.h",130,0,0,0
  64               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/inttypes.h",130,0,0,0
  65               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/stdint.h",130,0,0,0
  66               		.stabs	"int8_t:t(5,1)=(0,12)",128,0,125,0
  67               		.stabs	"uint8_t:t(5,2)=(0,13)",128,0,126,0
  68               		.stabs	"int16_t:t(5,3)=(0,1)",128,0,127,0
  69               		.stabs	"uint16_t:t(5,4)=(0,4)",128,0,128,0
  70               		.stabs	"int32_t:t(5,5)=(0,3)",128,0,129,0
  71               		.stabs	"uint32_t:t(5,6)=(0,5)",128,0,130,0
  72               		.stabs	"int64_t:t(5,7)=(0,8)",128,0,132,0
  73               		.stabs	"uint64_t:t(5,8)=(0,9)",128,0,133,0
  74               		.stabs	"intptr_t:t(5,9)=(5,3)",128,0,146,0
  75               		.stabs	"uintptr_t:t(5,10)=(5,4)",128,0,151,0
  76               		.stabs	"int_least8_t:t(5,11)=(5,1)",128,0,163,0
  77               		.stabs	"uint_least8_t:t(5,12)=(5,2)",128,0,168,0
  78               		.stabs	"int_least16_t:t(5,13)=(5,3)",128,0,173,0
  79               		.stabs	"uint_least16_t:t(5,14)=(5,4)",128,0,178,0
  80               		.stabs	"int_least32_t:t(5,15)=(5,5)",128,0,183,0
  81               		.stabs	"uint_least32_t:t(5,16)=(5,6)",128,0,188,0
  82               		.stabs	"int_least64_t:t(5,17)=(5,7)",128,0,196,0
  83               		.stabs	"uint_least64_t:t(5,18)=(5,8)",128,0,203,0
  84               		.stabs	"int_fast8_t:t(5,19)=(5,1)",128,0,217,0
  85               		.stabs	"uint_fast8_t:t(5,20)=(5,2)",128,0,222,0
  86               		.stabs	"int_fast16_t:t(5,21)=(5,3)",128,0,227,0
  87               		.stabs	"uint_fast16_t:t(5,22)=(5,4)",128,0,232,0
  88               		.stabs	"int_fast32_t:t(5,23)=(5,5)",128,0,237,0
  89               		.stabs	"uint_fast32_t:t(5,24)=(5,6)",128,0,242,0
  90               		.stabs	"int_fast64_t:t(5,25)=(5,7)",128,0,250,0
  91               		.stabs	"uint_fast64_t:t(5,26)=(5,8)",128,0,257,0
  92               		.stabs	"intmax_t:t(5,27)=(5,7)",128,0,277,0
  93               		.stabs	"uintmax_t:t(5,28)=(5,8)",128,0,282,0
  94               		.stabn	162,0,0,0
  95               		.stabs	"int_farptr_t:t(4,1)=(5,5)",128,0,77,0
  96               		.stabs	"uint_farptr_t:t(4,2)=(5,6)",128,0,81,0
  97               		.stabn	162,0,0,0
  98               		.stabn	162,0,0,0
  99               		.stabs	"/home/manu/github/arduino/LIDARBOT/libraries/avr/fuse.h",130,0,0,0
 100               		.stabs	"__fuse_t:t(6,1)=(6,2)=s3low:(0,13),0,8;high:(0,13),8,8;extended:(0,13),16,8;;",128,0,244,0
 101               		.stabn	162,0,0,0
 102               		.stabn	162,0,0,0
 103               		.stabs	"source/drivers/../os/USART.h",130,0,0,0
 104               		.stabs	"bufferStatus:T(7,1)=eBUFFER_OK:0,BUFFER_EMPTY:1,BUFFER_FULL:2,;",128,0,0,0
 105               		.stabs	"Buffer:T(7,2)=s1026data:(7,3)=ar(7,4)=r(7,4);0;0177777;;0;1023;(0,13),0,8192;readindex:(0,
 106               		.stabs	"Buffer:t(7,5)=(7,2)",128,0,34,0
 107               		.stabn	162,0,0,0
 108               		.stabs	"LIDARMODULESTRUCT:T(1,1)=s9headbyte1:(0,13),0,8;headbyte2:(0,13),8,8;distanceLow:(0,13),16
 109               		.stabs	"LIDAR:t(1,2)=(1,1)",128,0,25,0
 110               		.stabs	"OBJECTPROXIMITYSTRUCT:T(1,3)=s3proximity:(0,4),0,16;valid:(0,13),16,8;;",128,0,0,0
 111               		.stabs	"OBJECT:t(1,4)=(1,3)",128,0,34,0
 112               		.stabn	162,0,0,0
 113               		.stabs	"lidarinit:F(0,49)",36,0,7,lidarinit
 114               	.global	lidarinit
 115               		.type	lidarinit, @function
 116               	lidarinit:
 117               		.stabd	46,0,0
   1:source/drivers/LIDAR_driver.c **** #include "LIDAR_driver.h"
   2:source/drivers/LIDAR_driver.c **** 
   3:source/drivers/LIDAR_driver.c **** /* Calculation variables used locally by the functions below */
   4:source/drivers/LIDAR_driver.c **** unsigned char transferByte, sum, position;
   5:source/drivers/LIDAR_driver.c **** unsigned int  signalstrength, distance;
   6:source/drivers/LIDAR_driver.c **** 
   7:source/drivers/LIDAR_driver.c **** void lidarinit(void){
 118               		.stabn	68,0,7,.LM0-.LFBB1
 119               	.LM0:
 120               	.LFBB1:
 121               	/* prologue: function */
 122               	/* frame size = 0 */
 123               	/* stack size = 0 */
 124               	.L__stack_usage = 0
   8:source/drivers/LIDAR_driver.c ****   /* Setup timer 0 as trigger for lidar data reading */
   9:source/drivers/LIDAR_driver.c ****   LIDARreadtimer0setup();
 125               		.stabn	68,0,9,.LM1-.LFBB1
 126               	.LM1:
 127 0000 0E94 0000 		call LIDARreadtimer0setup
  10:source/drivers/LIDAR_driver.c ****   /* Setup the built-in LED 13 as a way to indicate bad data reads */
  11:source/drivers/LIDAR_driver.c ****   faultledsetup();
 128               		.stabn	68,0,11,.LM2-.LFBB1
 129               	.LM2:
 130 0004 0C94 0000 		jmp faultledsetup
 131               		.size	lidarinit, .-lidarinit
 132               	.Lscope1:
 133               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 134               		.stabd	78,0,0
 135               		.stabs	"parse:F(0,49)",36,0,14,parse
 136               	.global	parse
 137               		.type	parse, @function
 138               	parse:
 139               		.stabd	46,0,0
  12:source/drivers/LIDAR_driver.c **** }
  13:source/drivers/LIDAR_driver.c **** 
  14:source/drivers/LIDAR_driver.c **** void parse(void){
 140               		.stabn	68,0,14,.LM3-.LFBB2
 141               	.LM3:
 142               	.LFBB2:
 143               	/* prologue: function */
 144               	/* frame size = 0 */
 145               	/* stack size = 0 */
 146               	.L__stack_usage = 0
  15:source/drivers/LIDAR_driver.c ****   /* Let us sum the first eight bytes for checksum vericication */
  16:source/drivers/LIDAR_driver.c ****   sum = (tfmini.headbyte1    + tfmini.headbyte2   +
 147               		.stabn	68,0,16,.LM4-.LFBB2
 148               	.LM4:
 149 0008 7091 0000 		lds r23,tfmini
 150 000c 4091 0000 		lds r20,tfmini+1
  17:source/drivers/LIDAR_driver.c ****          tfmini.distanceHigh + tfmini.distanceLow +
 151               		.stabn	68,0,17,.LM5-.LFBB2
 152               	.LM5:
 153 0010 6091 0000 		lds r22,tfmini+3
 154 0014 5091 0000 		lds r21,tfmini+2
  18:source/drivers/LIDAR_driver.c ****          tfmini.strengthHigh + tfmini.strengthLow +
 155               		.stabn	68,0,18,.LM6-.LFBB2
 156               	.LM6:
 157 0018 3091 0000 		lds r19,tfmini+5
 158 001c 2091 0000 		lds r18,tfmini+4
  19:source/drivers/LIDAR_driver.c ****          tfmini.mode         + tfmini.spare);
 159               		.stabn	68,0,19,.LM7-.LFBB2
 160               	.LM7:
 161 0020 9091 0000 		lds r25,tfmini+6
 162 0024 8091 0000 		lds r24,tfmini+7
  16:source/drivers/LIDAR_driver.c ****          tfmini.distanceHigh + tfmini.distanceLow +
 163               		.stabn	68,0,16,.LM8-.LFBB2
 164               	.LM8:
 165 0028 470F      		add r20,r23
 166 002a 460F      		add r20,r22
 167 002c 450F      		add r20,r21
 168 002e 430F      		add r20,r19
 169 0030 420F      		add r20,r18
 170 0032 490F      		add r20,r25
 171 0034 480F      		add r20,r24
 172 0036 4093 0000 		sts sum,r20
  20:source/drivers/LIDAR_driver.c **** 
  21:source/drivers/LIDAR_driver.c ****   /* We also need the signal strength */
  22:source/drivers/LIDAR_driver.c ****   signalstrength = tfmini.strengthHigh + tfmini.strengthLow;
 173               		.stabn	68,0,22,.LM9-.LFBB2
 174               	.LM9:
 175 003a 8091 0000 		lds r24,tfmini+5
 176 003e 2091 0000 		lds r18,tfmini+4
 177 0042 30E0      		ldi r19,0
 178 0044 280F      		add r18,r24
 179 0046 311D      		adc r19,__zero_reg__
 180 0048 3093 0000 		sts signalstrength+1,r19
 181 004c 2093 0000 		sts signalstrength,r18
  23:source/drivers/LIDAR_driver.c **** 
  24:source/drivers/LIDAR_driver.c ****   /* tfmini datasheet says the distance is ineffective below 32 cm */
  25:source/drivers/LIDAR_driver.c ****   distance = (tfmini.distanceHigh) + (tfmini.distanceLow);
 182               		.stabn	68,0,25,.LM10-.LFBB2
 183               	.LM10:
 184 0050 5091 0000 		lds r21,tfmini+3
 185 0054 8091 0000 		lds r24,tfmini+2
 186 0058 90E0      		ldi r25,0
 187 005a 850F      		add r24,r21
 188 005c 911D      		adc r25,__zero_reg__
 189 005e 9093 0000 		sts distance+1,r25
 190 0062 8093 0000 		sts distance,r24
  26:source/drivers/LIDAR_driver.c **** 
  27:source/drivers/LIDAR_driver.c ****   /* Checksum and signal srength */
  28:source/drivers/LIDAR_driver.c ****   if((tfmini.checksum == sum)  &&
 191               		.stabn	68,0,28,.LM11-.LFBB2
 192               	.LM11:
 193 0066 5091 0000 		lds r21,tfmini+8
 194 006a 4513      		cpse r20,r21
 195 006c 00C0      		rjmp .L3
 196               		.stabn	68,0,28,.LM12-.LFBB2
 197               	.LM12:
 198 006e 2531      		cpi r18,21
 199 0070 3105      		cpc r19,__zero_reg__
 200 0072 04F0      		brlt .L3
  29:source/drivers/LIDAR_driver.c ****      (signalstrength  >   20)  &&
  30:source/drivers/LIDAR_driver.c ****      (signalstrength  < 2000)  &&
  31:source/drivers/LIDAR_driver.c ****      (tfmini.mode     = 0x02)  &&
 201               		.stabn	68,0,31,.LM13-.LFBB2
 202               	.LM13:
 203 0074 22E0      		ldi r18,lo8(2)
 204 0076 2093 0000 		sts tfmini+6,r18
 205 007a 8132      		cpi r24,33
 206 007c 9105      		cpc r25,__zero_reg__
 207 007e 04F0      		brlt .L3
  32:source/drivers/LIDAR_driver.c ****      (distance        >   32)  &&
  33:source/drivers/LIDAR_driver.c ****      (distance        < 1200)) {
  34:source/drivers/LIDAR_driver.c **** 
  35:source/drivers/LIDAR_driver.c ****     obstacle.proximity = distance;
 208               		.stabn	68,0,35,.LM14-.LFBB2
 209               	.LM14:
 210 0080 9093 0000 		sts obstacle+1,r25
 211 0084 8093 0000 		sts obstacle,r24
  36:source/drivers/LIDAR_driver.c ****     obstacle.valid = VALID;
 212               		.stabn	68,0,36,.LM15-.LFBB2
 213               	.LM15:
 214 0088 80E2      		ldi r24,lo8(32)
 215 008a 8093 0000 		sts obstacle+2,r24
  37:source/drivers/LIDAR_driver.c ****     PORTB &= ~(1<<PORTB5);
 216               		.stabn	68,0,37,.LM16-.LFBB2
 217               	.LM16:
 218 008e 2D98      		cbi 0x5,5
 219 0090 0895      		ret
 220               	.L3:
  38:source/drivers/LIDAR_driver.c ****   }
  39:source/drivers/LIDAR_driver.c ****   else {
  40:source/drivers/LIDAR_driver.c ****     obstacle.valid = INVALID;
 221               		.stabn	68,0,40,.LM17-.LFBB2
 222               	.LM17:
 223 0092 8FEF      		ldi r24,lo8(-1)
 224 0094 8093 0000 		sts obstacle+2,r24
  41:source/drivers/LIDAR_driver.c ****     PORTB |= (1<<PORTB5);
 225               		.stabn	68,0,41,.LM18-.LFBB2
 226               	.LM18:
 227 0098 2D9A      		sbi 0x5,5
 228 009a 0895      		ret
 229               		.size	parse, .-parse
 230               	.Lscope2:
 231               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 232               		.stabd	78,0,0
 233               		.stabs	"readLIDAR:F(0,49)",36,0,45,readLIDAR
 234               	.global	readLIDAR
 235               		.type	readLIDAR, @function
 236               	readLIDAR:
 237               		.stabd	46,0,0
  42:source/drivers/LIDAR_driver.c ****   }
  43:source/drivers/LIDAR_driver.c **** }
  44:source/drivers/LIDAR_driver.c **** 
  45:source/drivers/LIDAR_driver.c **** void readLIDAR(void){
 238               		.stabn	68,0,45,.LM19-.LFBB3
 239               	.LM19:
 240               	.LFBB3:
 241               	/* prologue: function */
 242               	/* frame size = 0 */
 243               	/* stack size = 0 */
 244               	.L__stack_usage = 0
  46:source/drivers/LIDAR_driver.c ****   // Read a byte and parse it
  47:source/drivers/LIDAR_driver.c ****   if (rxBufferRead(&transferByte) != BUFFER_OK) {
 245               		.stabn	68,0,47,.LM20-.LFBB3
 246               	.LM20:
 247 009c 80E0      		ldi r24,lo8(transferByte)
 248 009e 90E0      		ldi r25,hi8(transferByte)
 249 00a0 0E94 0000 		call rxBufferRead
 250 00a4 892B      		or r24,r25
 251 00a6 01F0      		breq .+2
 252 00a8 00C0      		rjmp .L6
  48:source/drivers/LIDAR_driver.c ****     return;
  49:source/drivers/LIDAR_driver.c ****   }
  50:source/drivers/LIDAR_driver.c **** 
  51:source/drivers/LIDAR_driver.c ****   switch(position){
 253               		.stabn	68,0,51,.LM21-.LFBB3
 254               	.LM21:
 255 00aa E091 0000 		lds r30,position
 256 00ae 8E2F      		mov r24,r30
 257 00b0 90E0      		ldi r25,0
 258 00b2 8930      		cpi r24,9
 259 00b4 9105      		cpc r25,__zero_reg__
 260 00b6 00F4      		brsh .L6
 261 00b8 FC01      		movw r30,r24
 262 00ba E050      		subi r30,lo8(-(gs(.L9)))
 263 00bc F040      		sbci r31,hi8(-(gs(.L9)))
 264 00be 8091 0000 		lds r24,transferByte
 265 00c2 0C94 0000 		jmp __tablejump2__
 266               		.section	.progmem.gcc_sw_table,"a",@progbits
 267               		.p2align	1
 268               	.L9:
 269 0000 0000      		.word gs(.L8)
 270 0002 0000      		.word gs(.L10)
 271 0004 0000      		.word gs(.L11)
 272 0006 0000      		.word gs(.L12)
 273 0008 0000      		.word gs(.L13)
 274 000a 0000      		.word gs(.L14)
 275 000c 0000      		.word gs(.L15)
 276 000e 0000      		.word gs(.L16)
 277 0010 0000      		.word gs(.L17)
 278               		.text
 279               	.L8:
  52:source/drivers/LIDAR_driver.c ****     /* Check if the first byte is HEAD */
  53:source/drivers/LIDAR_driver.c ****     case 0: {
  54:source/drivers/LIDAR_driver.c ****       if(transferByte == HEAD){
 280               		.stabn	68,0,54,.LM22-.LFBB3
 281               	.LM22:
 282 00c6 8935      		cpi r24,lo8(89)
 283 00c8 01F4      		brne .L6
  55:source/drivers/LIDAR_driver.c ****         tfmini.headbyte1=transferByte;
 284               		.stabn	68,0,55,.LM23-.LFBB3
 285               	.LM23:
 286 00ca 8093 0000 		sts tfmini,r24
  56:source/drivers/LIDAR_driver.c ****         position+=1;
 287               		.stabn	68,0,56,.LM24-.LFBB3
 288               	.LM24:
 289 00ce 81E0      		ldi r24,lo8(1)
 290 00d0 00C0      		rjmp .L19
 291               	.L10:
  57:source/drivers/LIDAR_driver.c ****       } else {
  58:source/drivers/LIDAR_driver.c ****         position=0;
  59:source/drivers/LIDAR_driver.c ****       }
  60:source/drivers/LIDAR_driver.c ****       break;
  61:source/drivers/LIDAR_driver.c ****     }
  62:source/drivers/LIDAR_driver.c **** 
  63:source/drivers/LIDAR_driver.c ****     /* Check if the second byte is also HEAD */
  64:source/drivers/LIDAR_driver.c ****     case 1: {
  65:source/drivers/LIDAR_driver.c ****       if(transferByte == HEAD){
 292               		.stabn	68,0,65,.LM25-.LFBB3
 293               	.LM25:
 294 00d2 8935      		cpi r24,lo8(89)
 295 00d4 01F4      		brne .L18
  66:source/drivers/LIDAR_driver.c ****         tfmini.headbyte2=transferByte;
 296               		.stabn	68,0,66,.LM26-.LFBB3
 297               	.LM26:
 298 00d6 8093 0000 		sts tfmini+1,r24
  67:source/drivers/LIDAR_driver.c ****         position+=1;
 299               		.stabn	68,0,67,.LM27-.LFBB3
 300               	.LM27:
 301 00da 82E0      		ldi r24,lo8(2)
 302 00dc 00C0      		rjmp .L19
 303               	.L18:
  68:source/drivers/LIDAR_driver.c ****       } else {
  69:source/drivers/LIDAR_driver.c ****         position=0;
 304               		.stabn	68,0,69,.LM28-.LFBB3
 305               	.LM28:
 306 00de 1092 0000 		sts position,__zero_reg__
 307 00e2 0895      		ret
 308               	.L11:
  70:source/drivers/LIDAR_driver.c ****       }
  71:source/drivers/LIDAR_driver.c ****       break;
  72:source/drivers/LIDAR_driver.c ****     }
  73:source/drivers/LIDAR_driver.c **** 
  74:source/drivers/LIDAR_driver.c ****     /* Gather the next 6 bytes*/
  75:source/drivers/LIDAR_driver.c ****     case 2: {
  76:source/drivers/LIDAR_driver.c ****       tfmini.distanceLow=transferByte;
 309               		.stabn	68,0,76,.LM29-.LFBB3
 310               	.LM29:
 311 00e4 8093 0000 		sts tfmini+2,r24
  77:source/drivers/LIDAR_driver.c ****       position+=1;
 312               		.stabn	68,0,77,.LM30-.LFBB3
 313               	.LM30:
 314 00e8 83E0      		ldi r24,lo8(3)
 315 00ea 00C0      		rjmp .L19
 316               	.L12:
  78:source/drivers/LIDAR_driver.c ****       break;
  79:source/drivers/LIDAR_driver.c ****     }
  80:source/drivers/LIDAR_driver.c ****     case 3: {
  81:source/drivers/LIDAR_driver.c ****       tfmini.distanceHigh=transferByte;
 317               		.stabn	68,0,81,.LM31-.LFBB3
 318               	.LM31:
 319 00ec 8093 0000 		sts tfmini+3,r24
  82:source/drivers/LIDAR_driver.c ****       position+=1;
 320               		.stabn	68,0,82,.LM32-.LFBB3
 321               	.LM32:
 322 00f0 84E0      		ldi r24,lo8(4)
 323 00f2 00C0      		rjmp .L19
 324               	.L13:
  83:source/drivers/LIDAR_driver.c ****       break;
  84:source/drivers/LIDAR_driver.c ****     }
  85:source/drivers/LIDAR_driver.c ****     case 4: {
  86:source/drivers/LIDAR_driver.c ****       tfmini.strengthLow=transferByte;
 325               		.stabn	68,0,86,.LM33-.LFBB3
 326               	.LM33:
 327 00f4 8093 0000 		sts tfmini+4,r24
  87:source/drivers/LIDAR_driver.c ****       position+=1;
 328               		.stabn	68,0,87,.LM34-.LFBB3
 329               	.LM34:
 330 00f8 85E0      		ldi r24,lo8(5)
 331 00fa 00C0      		rjmp .L19
 332               	.L14:
  88:source/drivers/LIDAR_driver.c **** 
  89:source/drivers/LIDAR_driver.c ****       break;
  90:source/drivers/LIDAR_driver.c ****     }
  91:source/drivers/LIDAR_driver.c ****     case 5: {
  92:source/drivers/LIDAR_driver.c ****       tfmini.strengthHigh=transferByte;
 333               		.stabn	68,0,92,.LM35-.LFBB3
 334               	.LM35:
 335 00fc 8093 0000 		sts tfmini+5,r24
  93:source/drivers/LIDAR_driver.c ****       position+=1;
 336               		.stabn	68,0,93,.LM36-.LFBB3
 337               	.LM36:
 338 0100 86E0      		ldi r24,lo8(6)
 339 0102 00C0      		rjmp .L19
 340               	.L15:
  94:source/drivers/LIDAR_driver.c **** 
  95:source/drivers/LIDAR_driver.c ****       break;
  96:source/drivers/LIDAR_driver.c ****     }
  97:source/drivers/LIDAR_driver.c ****     case 6: {
  98:source/drivers/LIDAR_driver.c ****       tfmini.mode=transferByte;
 341               		.stabn	68,0,98,.LM37-.LFBB3
 342               	.LM37:
 343 0104 8093 0000 		sts tfmini+6,r24
  99:source/drivers/LIDAR_driver.c ****       position+=1;
 344               		.stabn	68,0,99,.LM38-.LFBB3
 345               	.LM38:
 346 0108 87E0      		ldi r24,lo8(7)
 347 010a 00C0      		rjmp .L19
 348               	.L16:
 100:source/drivers/LIDAR_driver.c ****       break;
 101:source/drivers/LIDAR_driver.c ****     }
 102:source/drivers/LIDAR_driver.c ****     case 7: {
 103:source/drivers/LIDAR_driver.c ****       tfmini.spare=transferByte;
 349               		.stabn	68,0,103,.LM39-.LFBB3
 350               	.LM39:
 351 010c 8093 0000 		sts tfmini+7,r24
 104:source/drivers/LIDAR_driver.c ****       position+=1;
 352               		.stabn	68,0,104,.LM40-.LFBB3
 353               	.LM40:
 354 0110 88E0      		ldi r24,lo8(8)
 355               	.L19:
 356 0112 8093 0000 		sts position,r24
 105:source/drivers/LIDAR_driver.c **** 
 106:source/drivers/LIDAR_driver.c ****       break;
 357               		.stabn	68,0,106,.LM41-.LFBB3
 358               	.LM41:
 359 0116 0895      		ret
 360               	.L17:
 107:source/drivers/LIDAR_driver.c ****     }
 108:source/drivers/LIDAR_driver.c **** 
 109:source/drivers/LIDAR_driver.c ****     /* Once we get the checksum we can immediately parse the distance */
 110:source/drivers/LIDAR_driver.c ****     case 8: {
 111:source/drivers/LIDAR_driver.c ****       tfmini.checksum=transferByte;
 361               		.stabn	68,0,111,.LM42-.LFBB3
 362               	.LM42:
 363 0118 8093 0000 		sts tfmini+8,r24
 112:source/drivers/LIDAR_driver.c ****       parse();
 364               		.stabn	68,0,112,.LM43-.LFBB3
 365               	.LM43:
 366 011c 0E94 0000 		call parse
 113:source/drivers/LIDAR_driver.c **** 
 114:source/drivers/LIDAR_driver.c ****       /* Reset the position to first byte and repeat */
 115:source/drivers/LIDAR_driver.c ****       position=0;
 367               		.stabn	68,0,115,.LM44-.LFBB3
 368               	.LM44:
 369 0120 1092 0000 		sts position,__zero_reg__
 116:source/drivers/LIDAR_driver.c **** 
 117:source/drivers/LIDAR_driver.c ****       /* Reset the checksum to invalidate parsed frame */
 118:source/drivers/LIDAR_driver.c ****       tfmini.checksum = 0;
 370               		.stabn	68,0,118,.LM45-.LFBB3
 371               	.LM45:
 372 0124 1092 0000 		sts tfmini+8,__zero_reg__
 373               	.L6:
 374 0128 0895      		ret
 375               		.size	readLIDAR, .-readLIDAR
 376               	.Lscope3:
 377               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 378               		.stabd	78,0,0
 379               		.comm	distance,2,1
 380               		.comm	signalstrength,2,1
 381               		.comm	position,1,1
 382               		.comm	sum,1,1
 383               		.comm	transferByte,1,1
 384               		.comm	obstacle,3,1
 385               		.comm	tfmini,9,1
 386               		.comm	buffercount,2,1
 387               		.comm	rxBuffer,1026,1
 388               		.stabs	"rxBuffer:G(0,50)=B(7,5)",32,0,37,0
 389               		.stabs	"buffercount:G(0,51)=B(0,4)",32,0,38,0
 390               		.stabs	"tfmini:G(0,52)=B(1,2)",32,0,28,0
 391               		.stabs	"obstacle:G(0,53)=B(1,4)",32,0,36,0
 392               		.stabs	"transferByte:G(0,13)",32,0,4,0
 393               		.stabs	"sum:G(0,13)",32,0,4,0
 394               		.stabs	"position:G(0,13)",32,0,4,0
 395               		.stabs	"signalstrength:G(0,4)",32,0,5,0
 396               		.stabs	"distance:G(0,4)",32,0,5,0
 397               		.stabs	"",100,0,0,.Letext0
 398               	.Letext0:
 399               		.ident	"GCC: (GNU) 5.4.0"
 400               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 LIDAR_driver.c
     /tmp/ccqXHT2K.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccqXHT2K.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccqXHT2K.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccqXHT2K.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccqXHT2K.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccqXHT2K.s:116    .text:0000000000000000 lidarinit
     /tmp/ccqXHT2K.s:138    .text:0000000000000008 parse
                            *COM*:0000000000000009 tfmini
                            *COM*:0000000000000001 sum
                            *COM*:0000000000000002 signalstrength
                            *COM*:0000000000000002 distance
                            *COM*:0000000000000003 obstacle
     /tmp/ccqXHT2K.s:236    .text:000000000000009c readLIDAR
                            *COM*:0000000000000001 transferByte
                            *COM*:0000000000000001 position
                            *COM*:0000000000000002 buffercount
                            *COM*:0000000000000402 rxBuffer

UNDEFINED SYMBOLS
LIDARreadtimer0setup
faultledsetup
rxBufferRead
__tablejump2__
__do_clear_bss
